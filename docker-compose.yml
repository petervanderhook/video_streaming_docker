version: '3'
services:
  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      SECRET: a09fjw091jfi310
      MYSQL_DATABASE: video_streaming
      MYSQL_ROOT_PASSWORD: password
      MySQL_ROOT_HOST: "localhost"
      MySQL_USER: express
      MYSQL_PASSWORD: password
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    expose:
      - 3306
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 30s
      interval: 5s
      timeout: 5s
      retries: 10
  auth:
    image: myauthimage
    build:
      context: ./auth
      dockerfile: Dockerfile
    environment:
      SECRET: a09fjw091jfi310
  upload:
    image: myuploadimage
    build:
      context: ./upload
      dockerfile: Dockerfile
    environment:
      SECRET: a09fjw091jfi310
      DB_HOST: db
      DB_PASSWORD: password
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - data:/mnt/data
  file_system:
    build: ./file_system
    volumes:
      - data:/mnt/data
    environment:
      SECRET: a09fjw091jfi310
  streaming:
    image: mystreamingimage
    build:
      context: ./streaming
      dockerfile: Dockerfile
    environment:
      SECRET: a09fjw091jfi310
      DB_HOST: db
      DB_PASSWORD: password
      FILE_SYSTEM_HOST: file_system
    volumes:
      - data:/mnt/data
    depends_on:
      db:
        condition: service_healthy
  web:
    image: mynginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - 80:80
    volumes:
      - static-data:/usr/share/nginx/html
      - nginx-conf:/etc/nginx/sites-enabled
    depends_on:
      streaming:
        condition: service_started
      upload:
        condition: service_started
    environment:
      SECRET: a09fjw091jfi310
volumes:
  mysql-data: {}
  nginx-conf: {}
  static-data: {}
  data: {}